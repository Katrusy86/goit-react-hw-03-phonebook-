{"version":3,"sources":["components/contactForm/contactForm.module.css","components/filter/filter.module.css","components/contact/contact.module.css","components/contactForm/ContactForm.js","components/contact/Contact.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactList/contactlist.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","alert","this","className","styles","addContactForm","onSubmit","label","input__field","type","onChange","placeholder","button","Component","Contact","onDeleteContact","phoneBookList","contact","onClick","ContactList","items","map","item","key","id","Filter","onFilterContact","App","contacts","filter","addContact","contactToAdd","uuid","find","prevState","deleteContact","filterContact","persistedContact","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6a44115.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"contactForm_addContactForm__2EQ1T\",\"button\":\"contactForm_button__zo6n7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"filter_filter__label__edsI1\",\"filter__input\":\"filter_filter__input__2dtBx\",\"addContactForm\":\"filter_addContactForm__1WjfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookList\":\"contact_phoneBookList__33I26\",\"contact\":\"contact_contact__3B_uo\",\"button\":\"contact_button__2VMS7\"};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './contactForm.module.css'\r\n\r\n\r\n\r\nclass ContactForm extends Component{\r\n    state = {\r\n        name:'',\r\n        number:''  \r\n    };\r\n\r\n\r\n    handleChange = e =>{\r\n        const {name,value}=e.target;\r\n        this.setState({\r\n            [name]:value,\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        (this.state.name !== '' && this.state.number !== '' )?(       \r\n        this.props.onAddContact({...this.state})\r\n        ): alert ('Fields must be filled out')\r\n        this.setState({\r\n            name:'',\r\n            number:''\r\n        })\r\n    };\r\n    \r\n    \r\n\r\n    render() {\r\n           const {name, number}=this.state\r\n            return (\r\n                <>\r\n                <form className={styles.addContactForm} onSubmit = {this.handleSubmit}>\r\n                    <label className={styles.label}> \r\n                        Name\r\n                        <input className={styles.input__field} type=\"text\" value = {name} name=\"name\" onChange={this.handleChange} placeholder=\"Enter your name \"/>\r\n                    </label>\r\n                    <label className={styles.label}> \r\n                        Number\r\n                        <input className={styles.input__field} type=\"tel\" value = {number} name=\"number\" onChange={this.handleChange} placeholder=\"Enter your phone\"/>\r\n                    </label> \r\n                    <button className={styles.button} type=\"submit\">Add contact</button>\r\n                    </form>\r\n                </>\r\n            )\r\n            } \r\n}\r\n\r\nContactForm.propTypes = {\r\n    name:PropTypes.string,\r\n    number:PropTypes.number\r\n}\r\n\r\n\r\nexport default ContactForm","import React from 'react'\r\nimport styles from './contact.module.css'\r\n\r\n\r\nconst Contact = ({name,number,onDeleteContact}) => (\r\n    <div className={styles.phoneBookList}>\r\n        <p className={styles.contact}>{name}</p>\r\n        <p className={styles.contact}>{number}</p>\r\n        <button className={styles.button} type=\"button\" onClick={onDeleteContact}>Delete</button>\r\n    </div>\r\n);\r\n\r\nexport default Contact;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Contact from '../contact/Contact'\r\nimport styles from './contactlist.module.css'\r\n\r\n\r\nconst ContactList = ({items,onDeleteContact}) => (\r\n    <ul className={styles.phoneBookList}>\r\n        {items.map(item =>(\r\n            <li className={styles.contact} key={item.id}>\r\n                <Contact {...item} onDeleteContact = {()=>onDeleteContact(item.id)}/>\r\n            </li>\r\n        ))}\r\n        \r\n    </ul>\r\n);\r\n\r\n\r\nContactList.propTypes = {\r\n    items:PropTypes.arrayOf(PropTypes.shape({id:PropTypes.string.isRequired}).isRequired).isRequired,\r\n    onDeleteContact:PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;","import React from 'react'\r\nimport styles from './filter.module.css'\r\n\r\n\r\nconst Filter = ({value, onFilterContact}) => (\r\n    <input className={styles.addContactForm} type=\"text\" value={value} onChange={onFilterContact} placeholder=\"Find contacts by name\"/>\r\n);\r\n\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport { uuid } from 'uuidv4';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter'\r\n\r\nconst filterContact = (contacts,filter) => {\r\n    return contacts.filter(contact=>contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n}\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n      }\r\n\r\n// ==================localStorage===============\r\n    componentDidMount(){\r\n        const persistedContact = localStorage.getItem('contacts');\r\n\r\n        if(persistedContact) {\r\n            const contacts = JSON.parse(persistedContact);\r\n            this.setState({contacts})\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevState.contacts !== this.state.contacts){\r\n        localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n// ==================================================\r\n\r\n    addContact = (contact) => {\r\n        const contactToAdd = {\r\n            ...contact,\r\n            id: uuid()\r\n        }\r\n        const {name} = contact\r\n        // console.log(contact);\r\n        const findContact = this.state.contacts.find(((contact) => contact.name === name))\r\n        // console.log(findContact)\r\n        if(!findContact) {        \r\n        this.setState(prevState => ({\r\n            contacts:[...prevState.contacts, contactToAdd]\r\n        }))} else alert(`${name} is already in contacts!`)\r\n    };\r\n\r\n\r\n    deleteContact = id => {\r\n        this.setState(prevState =>({\r\n            contacts:prevState.contacts.filter(contact => contact.id !== id)\r\n        }))\r\n    }\r\n\r\n    filterContact = (e) => {\r\n        this.setState({\r\n            filter: e.target.value\r\n        })\r\n    }\r\n\r\n   render() {\r\n       const {contacts,filter}=this.state\r\n       const filteredContacts = filterContact(contacts,filter);\r\n    //    console.log(filteredContacts);\r\n        return (\r\n            <>\r\n            <div>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onAddContact={this.addContact}/>\r\n                \r\n                <h2>Contacts</h2>\r\n                <Filter value={filter} onFilterContact = {this.filterContact} />\r\n                <ContactList items={filteredContacts} onDeleteContact = {this.deleteContact}/>\r\n            </div>\r\n            </>\r\n        )\r\n   }   \r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookList\":\"contactlist_phoneBookList__Jn-Yt\",\"contact\":\"contactlist_contact__27FVM\"};"],"sourceRoot":""}